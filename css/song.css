div#body-wrap {
    width: 55%;
    margin: 0 auto;
}

/* MARK: Chord Sheet Styling */

#song-body * {
    font-family: 'Roboto', sans-serif;
    color: black;
}

#song-body .song-metadata {
    padding-block-end: 0.5em;

    * {
        font-family: 'Roboto Serif', sans-serif;
        text-align: center;
    }

    .song-title {
        font-size: 1.5em;
    }

    .song-subtitle {
        font-size: 1.25em;
        font-weight: normal;
    }
}

.chord,
.paragraph .row .column .annotation:has(+ .lyrics) {
    /* font-weight: 600; */
    font-weight: bold;
    font-style: italic;
}

#song-metadata {
    text-align: center;
}

/* Songline <table> (content in sections that aren't grids or tabs) */
/* #song-body .paragraph table {
    border-collapse: collapse;
} */

/* Removes default padding from all cells (around blocks of lyrics and chords) */
/* #song-body .paragraph table tr > td {
    padding: 0;
} */

/* MARK: Chord Sheet Layout */

#song-body {
    position: relative;
    width: fit-content;
    min-width: 75%;
    margin: 0 auto;

    .download {
        position: absolute;
        inset-block-start: 4px;
        inset-inline-end: 4px;
    }
}

#song-body .row {
    display: flex;
}

#song-body .label {
    margin: 0;
    /* Spacing after a section label */
    margin-block-end: 0.125em;
}

/* Spacing after all sections (except for the last one) */
#song-body .paragraph:not(:last-of-type) {
    margin-block-end: 1em;
}

/* Adds a zero-width space after all empty .chord elements and all .lyrics elements. */
/* Ensures that empty .chords elements still take up space, and that all .lyrics elements show any whitespace at the end of its content (regular space). */
#song-body :is(:is(.chord, .annotation):empty, .lyrics):after {
    content: '\200b';
}

#song-body .grid .row,
#song-body .paragraph.ly .row {
    flex-direction: column;
}

/* MARK: Specific Elements */

/* Ensures space after chords followed immediately by another chord that aren't the last in the line */
#song-body .paragraph:has(.column .chord) .column:not(:last-child):has(+ .column :is(.chord, .annotation):not(:empty)) :is(.chord, .annotation):not(:empty) {
    padding-right: 0.5ch;
}

/* For all chunks with a chord that is followed by a no-chord chunk, ensure that the chord itself is allowed to hang over the end of its chunk if it's longer than the lyrics below it. */
#song-body .paragraph .column:is(:has(.chord):has(.lyrics):has(+ .column .chord:first-child:empty)) {
    /* Flexbox */
    display: flex;
    /* Reverse the order so the lyrics is the prioritized child element */
    flex-direction: column-reverse;
    /* This allows the children to use `absolute` and stay inside this element */
    position: relative;
    /* Ensures it takes up some space if the `lyrics` element is actually empty */
    /* min-width: 0.5ch; */

    /* Forcefully shorten the width of a column when it has a chord that is placed above whitespace (empty lyrics) */
    &:has(.lyrics:empty) {
        width: 1.5ch;
    }

    .chord {
        /* Force the position of the element to be absolutely the top edge of its parent */
        position: absolute;
        /* Same as `top` but supports right-to-left */
        inset-block-start: 0;
    }
}

/* MARK: Grids */

.grid-wrap {
    /* Layout */
    display: table;
    border-collapse: collapse;

    /* Keep the table from stretching to fill the horizontal space. Instead, shrink to exact content size */
    width: fit-content;

    /* Fonts */
    .grid-margin-text {
        /* Italicize all grid margin text */
        font-style: italic;
    }

    .grid-barline {
        /* Bold all barlines */
        font-weight: bold;
    }

    td {
        /* Override default cell padding for all cells to `0` */
        /* This will be overridden further for chord/empty cells */
        padding: 0;

        /* All empty cells (ChordPro `.`) */
        &.grid-cell:empty {
            /* Should take up at least *this* much space */
            min-width: 1em;
        }

        &.grid-cell {
            /* Add horizontal padding to all grid cells (both chord and empty spacing cells) */
            padding: 0 0.5em;
        }

        /* Add space between grid and any leading/trailing grid margin text */
        &.grid-margin-text {
            &:first-of-type {
                padding-inline-end: 0.5em;
            }

            &:last-of-type {
                padding-inline-start: 0.5em;
            }
        }
    }
}

/* MARK: Lilypond */

.ly-svg {
    /* 70px, this should cause chord names over tab to be same size as chord sheet */
    height: 4.375em;
}
